diff --git a/drivers/i2c/i2c-uclass.c b/drivers/i2c/i2c-uclass.c
index 5c4626b..1930d2c 100644
--- a/drivers/i2c/i2c-uclass.c
+++ b/drivers/i2c/i2c-uclass.c
@@ -770,3 +770,514 @@ U_BOOT_DRIVER(i2c_generic_chip_drv) = {
 #endif
 	ACPI_OPS_PTR(&acpi_i2c_ops)
 };
+
+/* Clk gen B configuration */
+#define SI5391_REVA_REG_CONFIG_NUM_REGS				443
+
+typedef struct
+{
+	unsigned char address; /* 8-bit register address */
+	unsigned char value; /* 8-bit register data */
+
+} si5391_reva_register_t;
+
+static si5391_reva_register_t const si5391_reva_registers[SI5391_REVA_REG_CONFIG_NUM_REGS] =
+{
+
+	/* Start configuration preamble */
+{0x01 , 0x0B },
+{0x24 , 0xC0 },
+{0x25 , 0x00 },
+{0x01 , 0x00 },
+{0x06 , 0x00 },
+{0x07 , 0x00 },
+{0x08 , 0x00 },
+{0x0B , 0x74 },
+{0x17 , 0xD2 },
+{0x18 , 0xFE },
+{0x21 , 0x09 },
+{0x22 , 0x00 },
+{0x2B , 0x02 },
+{0x2C , 0x31 },
+{0x2D , 0x01 },
+{0x2E , 0x71 },
+{0x2F , 0x00 },
+{0x30 , 0x00 },
+{0x31 , 0x00 },
+{0x32 , 0x00 },
+{0x33 , 0x00 },
+{0x34 , 0x00 },
+{0x35 , 0x00 },
+{0x36 , 0x71 },
+{0x37 , 0x00 },
+{0x38 , 0x00 },
+{0x39 , 0x00 },
+{0x3A , 0x00 },
+{0x3B , 0x00 },
+{0x3C , 0x00 },
+{0x3D , 0x00 },
+{0x41 , 0x06 },
+{0x42 , 0x00 },
+{0x43 , 0x00 },
+{0x44 , 0x00 },
+{0x9E , 0x00 },
+{0x01 , 0x01 },
+{0x02 , 0x01 },
+{0x03 , 0x06 },
+{0x04 , 0x09 },
+{0x05 , 0x33 },
+{0x06 , 0x09 },
+{0x08 , 0x06 },
+{0x09 , 0x09 },
+{0x0A , 0x33 },
+{0x0B , 0x09 },
+{0x0D , 0x06 },
+{0x0E , 0x09 },
+{0x0F , 0x33 },
+{0x10 , 0x09 },
+{0x12 , 0x02 },
+{0x13 , 0x09 },
+{0x14 , 0x33 },
+{0x15 , 0x08 },
+{0x17 , 0x02 },
+{0x18 , 0x09 },
+{0x19 , 0x33 },
+{0x1A , 0x08 },
+{0x1C , 0x02 },
+{0x1D , 0x09 },
+{0x1E , 0x33 },
+{0x1F , 0x08 },
+{0x21 , 0x02 },
+{0x22 , 0xCC },
+{0x23 , 0x00 },
+{0x24 , 0x08 },
+{0x26 , 0x01 },
+{0x27 , 0xCC },
+{0x28 , 0x00 },
+{0x29 , 0x08 },
+{0x2B , 0x02 },
+{0x2C , 0x09 },
+{0x2D , 0x33 },
+{0x2E , 0x08 },
+{0x30 , 0x02 },
+{0x31 , 0x09 },
+{0x32 , 0x33 },
+{0x33 , 0x08 },
+{0x35 , 0x02 },
+{0x36 , 0x09 },
+{0x37 , 0x33 },
+{0x38 , 0x08 },
+{0x3A , 0x02 },
+{0x3B , 0x09 },
+{0x3C , 0x33 },
+{0x3D , 0x08 },
+{0x3F , 0x00 },
+{0x40 , 0x00 },
+{0x41 , 0x40 },
+{0x01 , 0x02 },
+{0x06 , 0x00 },
+{0x08 , 0x01 },
+{0x09 , 0x00 },
+{0x0A , 0x00 },
+{0x0B , 0x00 },
+{0x0C , 0x00 },
+{0x0D , 0x00 },
+{0x0E , 0x01 },
+{0x0F , 0x00 },
+{0x10 , 0x00 },
+{0x11 , 0x00 },
+{0x12 , 0x00 },
+{0x13 , 0x00 },
+{0x14 , 0x00 },
+{0x15 , 0x00 },
+{0x16 , 0x00 },
+{0x17 , 0x00 },
+{0x18 , 0x00 },
+{0x19 , 0x00 },
+{0x1A , 0x00 },
+{0x1B , 0x00 },
+{0x1C , 0x00 },
+{0x1D , 0x00 },
+{0x1E , 0x00 },
+{0x1F , 0x00 },
+{0x20 , 0x00 },
+{0x21 , 0x00 },
+{0x22 , 0x00 },
+{0x23 , 0x00 },
+{0x24 , 0x00 },
+{0x25 , 0x00 },
+{0x26 , 0x00 },
+{0x27 , 0x00 },
+{0x28 , 0x00 },
+{0x29 , 0x00 },
+{0x2A , 0x00 },
+{0x2B , 0x00 },
+{0x2C , 0x00 },
+{0x2D , 0x00 },
+{0x2E , 0x00 },
+{0x2F , 0x00 },
+{0x35 , 0x00 },
+{0x36 , 0x00 },
+{0x37 , 0x00 },
+{0x38 , 0x00 },
+{0x39 , 0x37 },
+{0x3A , 0x00 },
+{0x3B , 0x00 },
+{0x3C , 0x00 },
+{0x3D , 0x00 },
+{0x3E , 0x80 },
+{0x47 , 0x00 },
+{0x48 , 0x00 },
+{0x49 , 0x00 },
+{0x4A , 0x00 },
+{0x4B , 0x00 },
+{0x4C , 0x00 },
+{0x4D , 0x00 },
+{0x4E , 0x00 },
+{0x4F , 0x00 },
+{0x50 , 0x03 },
+{0x51 , 0x00 },
+{0x52 , 0x00 },
+{0x53 , 0x03 },
+{0x54 , 0x00 },
+{0x55 , 0x00 },
+{0x56 , 0x03 },
+{0x57 , 0x00 },
+{0x58 , 0x00 },
+{0x59 , 0x18 },
+{0x5A , 0x00 },
+{0x5B , 0x00 },
+{0x5C , 0x00 },
+{0x5D , 0x00 },
+{0x5E , 0x00 },
+{0x5F , 0x04 },
+{0x60 , 0x00 },
+{0x61 , 0x00 },
+{0x62 , 0x04 },
+{0x63 , 0x00 },
+{0x64 , 0x00 },
+{0x65 , 0x04 },
+{0x66 , 0x00 },
+{0x67 , 0x00 },
+{0x68 , 0x04 },
+{0x69 , 0x00 },
+{0x6A , 0x00 },
+{0x6B , 0x30 },
+{0x6C , 0x00 },
+{0x6D , 0x00 },
+{0x6E , 0x00 },
+{0x6F , 0x00 },
+{0x70 , 0x00 },
+{0x71 , 0x00 },
+{0x72 , 0x00 },
+{0x01 , 0x03 },
+{0x02 , 0x00 },
+{0x03 , 0x00 },
+{0x04 , 0x00 },
+{0x05 , 0x80 },
+{0x06 , 0x05 },
+{0x07 , 0x00 },
+{0x08 , 0x00 },
+{0x09 , 0x00 },
+{0x0A , 0x00 },
+{0x0B , 0x80 },
+{0x0C , 0x00 },
+{0x0D , 0x00 },
+{0x0E , 0x00 },
+{0x0F , 0x00 },
+{0x10 , 0x30 },
+{0x11 , 0x11 },
+{0x12 , 0x00 },
+{0x13 , 0x00 },
+{0x14 , 0x00 },
+{0x15 , 0x00 },
+{0x16 , 0xC0 },
+{0x17 , 0x00 },
+{0x18 , 0x00 },
+{0x19 , 0x00 },
+{0x1A , 0x00 },
+{0x1B , 0x00 },
+{0x1C , 0x00 },
+{0x1D , 0x00 },
+{0x1E , 0x00 },
+{0x1F , 0x00 },
+{0x20 , 0x00 },
+{0x21 , 0x00 },
+{0x22 , 0x00 },
+{0x23 , 0x00 },
+{0x24 , 0x00 },
+{0x25 , 0x00 },
+{0x26 , 0x00 },
+{0x27 , 0x00 },
+{0x28 , 0x00 },
+{0x29 , 0x00 },
+{0x2A , 0x00 },
+{0x2B , 0x00 },
+{0x2C , 0x00 },
+{0x2D , 0x00 },
+{0x2E , 0x00 },
+{0x2F , 0x00 },
+{0x30 , 0x00 },
+{0x31 , 0x00 },
+{0x32 , 0x00 },
+{0x33 , 0x00 },
+{0x34 , 0x00 },
+{0x35 , 0x00 },
+{0x36 , 0x00 },
+{0x37 , 0x00 },
+{0x38 , 0x00 },
+{0x39 , 0x1F },
+{0x3B , 0x00 },
+{0x3C , 0x00 },
+{0x3D , 0x00 },
+{0x3E , 0x00 },
+{0x3F , 0x00 },
+{0x40 , 0x00 },
+{0x41 , 0x00 },
+{0x42 , 0x00 },
+{0x43 , 0x00 },
+{0x44 , 0x00 },
+{0x45 , 0x00 },
+{0x46 , 0x00 },
+{0x47 , 0x00 },
+{0x48 , 0x00 },
+{0x49 , 0x00 },
+{0x4A , 0x00 },
+{0x4B , 0x00 },
+{0x4C , 0x00 },
+{0x4D , 0x00 },
+{0x4E , 0x00 },
+{0x4F , 0x00 },
+{0x50 , 0x00 },
+{0x51 , 0x00 },
+{0x52 , 0x00 },
+{0x53 , 0x00 },
+{0x54 , 0x00 },
+{0x55 , 0x00 },
+{0x56 , 0x00 },
+{0x57 , 0x00 },
+{0x58 , 0x00 },
+{0x59 , 0x00 },
+{0x5A , 0x00 },
+{0x5B , 0x00 },
+{0x5C , 0x00 },
+{0x5D , 0x00 },
+{0x5E , 0x00 },
+{0x5F , 0x00 },
+{0x60 , 0x00 },
+{0x61 , 0x00 },
+{0x62 , 0x00 },
+{0x01 , 0x08 },
+{0x02 , 0x00 },
+{0x03 , 0x00 },
+{0x04 , 0x00 },
+{0x05 , 0x00 },
+{0x06 , 0x00 },
+{0x07 , 0x00 },
+{0x08 , 0x00 },
+{0x09 , 0x00 },
+{0x0A , 0x00 },
+{0x0B , 0x00 },
+{0x0C , 0x00 },
+{0x0D , 0x00 },
+{0x0E , 0x00 },
+{0x0F , 0x00 },
+{0x10 , 0x00 },
+{0x11 , 0x00 },
+{0x12 , 0x00 },
+{0x13 , 0x00 },
+{0x14 , 0x00 },
+{0x15 , 0x00 },
+{0x16 , 0x00 },
+{0x17 , 0x00 },
+{0x18 , 0x00 },
+{0x19 , 0x00 },
+{0x1A , 0x00 },
+{0x1B , 0x00 },
+{0x1C , 0x00 },
+{0x1D , 0x00 },
+{0x1E , 0x00 },
+{0x1F , 0x00 },
+{0x20 , 0x00 },
+{0x21 , 0x00 },
+{0x22 , 0x00 },
+{0x23 , 0x00 },
+{0x24 , 0x00 },
+{0x25 , 0x00 },
+{0x26 , 0x00 },
+{0x27 , 0x00 },
+{0x28 , 0x00 },
+{0x29 , 0x00 },
+{0x2A , 0x00 },
+{0x2B , 0x00 },
+{0x2C , 0x00 },
+{0x2D , 0x00 },
+{0x2E , 0x00 },
+{0x2F , 0x00 },
+{0x30 , 0x00 },
+{0x31 , 0x00 },
+{0x32 , 0x00 },
+{0x33 , 0x00 },
+{0x34 , 0x00 },
+{0x35 , 0x00 },
+{0x36 , 0x00 },
+{0x37 , 0x00 },
+{0x38 , 0x00 },
+{0x39 , 0x00 },
+{0x3A , 0x00 },
+{0x3B , 0x00 },
+{0x3C , 0x00 },
+{0x3D , 0x00 },
+{0x3E , 0x00 },
+{0x3F , 0x00 },
+{0x40 , 0x00 },
+{0x41 , 0x00 },
+{0x42 , 0x00 },
+{0x43 , 0x00 },
+{0x44 , 0x00 },
+{0x45 , 0x00 },
+{0x46 , 0x00 },
+{0x47 , 0x00 },
+{0x48 , 0x00 },
+{0x49 , 0x00 },
+{0x4A , 0x00 },
+{0x4B , 0x00 },
+{0x4C , 0x00 },
+{0x4D , 0x00 },
+{0x4E , 0x00 },
+{0x4F , 0x00 },
+{0x50 , 0x00 },
+{0x51 , 0x00 },
+{0x52 , 0x00 },
+{0x53 , 0x00 },
+{0x54 , 0x00 },
+{0x55 , 0x00 },
+{0x56 , 0x00 },
+{0x57 , 0x00 },
+{0x58 , 0x00 },
+{0x59 , 0x00 },
+{0x5A , 0x00 },
+{0x5B , 0x00 },
+{0x5C , 0x00 },
+{0x5D , 0x00 },
+{0x5E , 0x00 },
+{0x5F , 0x00 },
+{0x60 , 0x00 },
+{0x61 , 0x00 },
+{0x01 , 0x09 },
+{0x0E , 0x00 },
+{0x1C , 0x04 },
+{0x43 , 0x01 },
+{0x49 , 0x01 },
+{0x4A , 0x10 },
+{0x4E , 0x49 },
+{0x4F , 0xF2 },
+{0x5E , 0x00 },
+{0x01 , 0x0A },
+{0x02 , 0x00 },
+{0x03 , 0x03 },
+{0x04 , 0x01 },
+{0x05 , 0x03 },
+{0x14 , 0x00 },
+{0x1A , 0x00 },
+{0x20 , 0x00 },
+{0x26 , 0x00 },
+{0x2C , 0x00 },
+{0x38 , 0x00 },
+{0x39 , 0x00 },
+{0x3A , 0x00 },
+{0x3C , 0x00 },
+{0x3D , 0x00 },
+{0x3E , 0x00 },
+{0x40 , 0x00 },
+{0x41 , 0x00 },
+{0x42 , 0x00 },
+{0x44 , 0x00 },
+{0x45 , 0x00 },
+{0x46 , 0x00 },
+{0x48 , 0x00 },
+{0x49 , 0x00 },
+{0x4A , 0x00 },
+{0x4C , 0x00 },
+{0x4D , 0x00 },
+{0x4E , 0x00 },
+{0x4F , 0x00 },
+{0x50 , 0x00 },
+{0x51 , 0x00 },
+{0x52 , 0x00 },
+{0x53 , 0x00 },
+{0x54 , 0x00 },
+{0x55 , 0x00 },
+{0x56 , 0x00 },
+{0x57 , 0x00 },
+{0x58 , 0x00 },
+{0x59 , 0x00 },
+{0x5A , 0x00 },
+{0x5B , 0x00 },
+{0x5C , 0x00 },
+{0x5D , 0x00 },
+{0x5E , 0x00 },
+{0x5F , 0x00 },
+{0x01 , 0x0B },
+{0x44 , 0x0F },
+{0x4A , 0x1C },
+{0x57 , 0x67 },
+{0x58 , 0x00 },
+{0x01 , 0x00 },
+{0x1C , 0x01 },
+{0x01 , 0x0B },
+{0x24 , 0xC3 },
+{0x25 , 0x02 },
+/* End configuration postamble */
+};
+
+int init_clk_genB() {
+	struct udevice *dev, *devclk;
+	struct udevice *bus;
+	struct dm_i2c_chip *i2c_chip;
+	uint8_t buff[2];
+	int ret, i;
+	unsigned int bus_num = 0;
+	uint8_t mux_addr = 0x70;
+	uint8_t mux_port = 0x80;
+	uint8_t clk_addr = 0x74;
+	uint8_t clk_ver_addr = 0x02;
+	ret = uclass_get_device_by_seq(UCLASS_I2C, bus_num, &bus);
+    printf("uclass_get_device_by_seq: ret %d\n", ret);
+	ret = i2c_get_chip(bus, mux_addr, 1, &dev);
+    printf("i2c_get_chip: %d\n", ret);
+    i2c_chip = dev_get_parent_platdata(dev);
+	if (! i2c_chip) {
+		printf("failed dev_get_parent_platdata\n");
+		return -1;
+	}
+	i2c_chip->flags &= ~DM_I2C_CHIP_WR_ADDRESS;
+	buff[0] = mux_port;
+	ret = dm_i2c_write(dev, 0, buff, 1);
+	ret = i2c_get_chip(bus, clk_addr, 1, &devclk);
+	printf("i2c_get_chip %X: %d\n", clk_addr, ret);
+    i2c_chip = dev_get_parent_platdata(devclk);
+    if (! i2c_chip) {
+        printf("failed dev_get_parent_platdata for devclk\n");
+        return -1;
+    }
+	ret = dm_i2c_read(devclk, clk_ver_addr, buff, 2);
+	printf("Detected Chip: %02X %02X\n", buff[1],buff[0]);
+	if (0x53 != buff[1] || 0x91 != buff[0]) {
+		printf("Skip clk B initialization\n");
+		return 0;
+	}
+	for (i = 0; i < SI5391_REVA_REG_CONFIG_NUM_REGS ; i++) {
+		ret = dm_i2c_write(devclk, si5391_reva_registers[i].address, &(si5391_reva_registers[i].value), 1);
+		if (i==2)
+			udelay(300000);
+		udelay(200);
+		if (ret < 0) {
+			printf("write failed on index %d\n", i);
+			break;
+		}
+	}
+	printf("Clk Gen B programm %s\n", ret < 0 ? "failed" : "success");
+	return 0;
+}
+
diff --git a/include/i2c.h b/include/i2c.h
index 880aa80..fb511a2 100644
--- a/include/i2c.h
+++ b/include/i2c.h
@@ -969,6 +969,7 @@ int i2c_get_bus_num_fdt(int node);
  */
 int i2c_reset_port_fdt(const void *blob, int node);
 
+int init_clk_genB();
 #endif /* !CONFIG_DM_I2C */
 
 #endif	/* _I2C_H_ */
diff --git a/net/eth-uclass.c b/net/eth-uclass.c
index e14695c..f9d8b29 100644
--- a/net/eth-uclass.c
+++ b/net/eth-uclass.c
@@ -16,7 +16,7 @@
 #include <net/pcap.h>
 #include "eth_internal.h"
 #include <eth_phy.h>
-
+#include <i2c.h>
 DECLARE_GLOBAL_DATA_PTR;
 
 /**
@@ -406,9 +406,34 @@ int eth_initialize(void)
 {
 	int num_devices = 0;
 	struct udevice *dev;
-
-	eth_common_init();
-
+	/* initialize clk gen B */
+	/* do phy reset*/
+	{
+	  unsigned int gpio=26;
+	  int ret;
+	  ret = gpio_request(gpio, "phy_reset");
+	  if (ret && ret != -EBUSY) {
+		  printf("gpio: requesting pin %u failed\n", gpio);
+		  printf("the Phy did not have reset\n" ); 
+	    
+	  }
+	  else
+	  {
+
+	    printf("reseting Phy\r\n");
+	    gpio_direction_output(gpio, 0);
+	    /* initialize clk gen B */
+	    init_clk_genB();
+	    udelay(200000);//it take time till it gen CLK ~100msec
+	    gpio_set_value(gpio, 1);
+	    udelay(500);
+	    printf("Finish reseting Phy\r\n");
+	    gpio_free(gpio);
+	  }
+	  
+	}
+	
+		eth_common_init();
 	/*
 	 * Devices need to write the hwaddr even if not started so that Linux
 	 * will have access to the hwaddr that u-boot stored for the device.
