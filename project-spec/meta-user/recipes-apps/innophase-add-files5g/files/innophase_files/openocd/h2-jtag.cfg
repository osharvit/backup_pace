#
# OpenOCD setup script for Hermes TWO
#

if { ![info exists CHIPNAME] } {
   set CHIPNAME hermes_two
}

if { ![info exists CPUTAPID] } {
   set CPUTAPID 0x4ba00477
}

set H2_CHIP_VER {Unknown}

proc mmio_rd {size addr} {
    set val(0) 0
    mem2array val $size $addr 1
    return $val(0)
}

proc mmio_wr {size addr val} {
    set x(0) $val
    array2mem x $size $addr 1
}

proc h2_detect_version {} {
    global H2_CHIP_VER
    set chipid [mmio_rd 32 0xfc0100]
    set maskid [mmio_rd  8 0xfc0104]
    if {$chipid == [expr 0x494832]} {
        set H2_CHIP_VER {A0}
    } else {
        set H2_CHIP_VER [format "UNKNOWN:%08x:%02x" $chipid $maskid]
    }
    puts "Info : Hermes TWO rev. $H2_CHIP_VER"
}

adapter_khz 1000
transport select jtag
jtag newtap $CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $CPUTAPID

if { [llength [info commands dap]] == 0 } {
    # OpenOCD version 0.10 and older that doesn't have a 'dap' command
    target create $CHIPNAME.cpu cortex_m -endian little -chain-position $CHIPNAME.cpu
} else {
    # Newer versions of OpenOCD needs the DAP created explicitly
    dap create $CHIPNAME.dap -chain-position $CHIPNAME.cpu
    target create $CHIPNAME.cpu cortex_m -endian little -dap $CHIPNAME.dap
}

$CHIPNAME.cpu configure -event examine-end { h2_detect_version }

cortex_m reset_config sysresetreq
