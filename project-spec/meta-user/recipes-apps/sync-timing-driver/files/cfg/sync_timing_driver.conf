#/****************************************************************************************/
#/**                  Copyright (c) 2018, 2021 Skyworks Solution Inc.                   **/
#/****************************************************************************************/
#/** This software is provided 'as-is', without any express or implied warranty.        **/
#/** In no event will the authors be held liable for any damages arising from the use   **/
#/** of this software.                                                                  **/
#/** Permission is granted to anyone to use this software for any purpose, including    **/
#/** commercial applications, and to alter it and redistribute it freely, subject to    **/
#/** the following restrictions:                                                        **/
#/** 1. The origin of this software must not be misrepresented; you must not claim that **/
#/**    you wrote the original software. If you use this software in a product,         **/
#/**    an acknowledgment in the product documentation would be appreciated but is not  **/
#/**    required.                                                                       **/
#/** 2. Altered source versions must be plainly marked as such, and must not be         **/
#/**    misrepresented as being the original software.                                  **/
#/** 3. This notice may not be removed or altered from any source distribution.         **/
#/****************************************************************************************/
#
# Sync Timing Driver Config file
#


##### The Following fields represent the global configuration information 
################################################################################################
[global]
################################################################################################

# Number of distinct applications that will connect to the driver core - Maximum is defined by SYNC_TIMING_MAX_APPLICATIONS in sync_timing_config.h
num_applications = 1

# Total number of applications instances that will connect to the driver core - Maximum is defined by SYNC_TIMING_MAX_APPLICATION_INSTANCES in sync_timing_config.h
num_application_instances = 1

# Folder where log files will be saved
log_folder = "/var/log/"


##### The Following fields represent the configuration information for the timing driver core 
################################################################################################
[core]
################################################################################################

# Logfile name - When specified all fileout logs from CORE module once registered with the logger will go to this file
logfile = "synctimingdriver.log"

# Clear logfile at startup - when the application starts and registers with the core. 
# Set to 1 only if the application desires its own log file and wants it to be cleared at startup.
clear_logfile_startup = 1

# Display trace level in the log msg
trace_level_in_log_msg = 1

# Display module name in the log msg
module_name_in_log_msg = 1

# Display timestamp in the log msg
timestamp_in_log_msg = 1

# Use Mini timestamp instead of a detailed timestamp in the log msg
use_mini_timestamp = 0

# Display function name and line number in the log msg
func_info_in_log_msg = 1

# stdout log filter enabled
stdout_filter_enabled = 1

# stdout log filter trace level
# CRITICAL = 0,  LOG Level Critical
# ERROR    = 1,  LOG Level Error   
# WARNING  = 2,  LOG Level Warning
# INFO1    = 3,  LOG Level Info1
# INFO2    = 4,  LOG Level Info2
# INFO3    = 5,  LOG Level Info3
# DEBUG    = 6,  LOG Level Debug
# NONE     = 7,  LOG Level None - Trace Disabled
stdout_filter_loglevel = 7

# fileout log filter enabled
fileout_filter_enabled = 1

# fileout log filter trace level
fileout_filter_loglevel = 2

# Number of files around which to rotate logs; 
# Min = 1 and Max = 50; 
# Min and Max defined by SYNC_TIMING_MIN_LOG_ROTATE_FILES and SYNC_TIMING_MAX_LOG_ROTATE_FILES in sync_timing_config.h
fileout_num_rotate_files = 10

# Maximum size of each log file; 
# Min - 200KB and Max = 20MB; 
# Min and Max defined by SYNC_TIMING_MIN_LOG_FILE_SIZE and SYNC_TIMING_MAX_LOG_FILE_SIZE in sync_timing_config.h
fileout_max_file_size = 204800

# Number of Timing devices supported - Min = 1; Maximum is defined by SYNC_TIMING_MAX_DEVICES in sync_timing_config.h
num_timing_devices = 1


################################################################################################
[core_timing_device_1]
################################################################################################

# Assign a unique name to this timing device/card
timing_device_name = "MainTimingCard"

# Timing device communication interface : SPI = 0, I2C = 1
# I2C is supported only for Smart/Light-Weight Driver
timing_device_interface = 0

# OEM Datapath Interface : SPI = 0, I2C = 1
oem_datapath_interface = 0

# OEM Device Type : 0 = SYNC_TIMING_OEM_DEVICE_REF_EVB
oem_device_type = 0

##### The following represent OEM_Datapath_SPI_Configuration

# Linux SPI Device Name
oem_spi_devname = "/dev/spidev1."

# Linux SPI Device Id
oem_spi_devid = 0

# SPI Speed in Hertz
oem_spi_speed = 500000

# SPI Bits per word
oem_spi_bpw = 8

# SPI Mode
oem_spi_mode = 0

##### The following fields represent OEM_Datapath_I2C_Configuration

# Linux I2C Device Name
oem_i2c_devname = "/dev/i2c-"

# Linux I2C Device Id
oem_i2c_devid = 23

# I2C Speed in Hertz
oem_i2c_speed = 100000

# I2C Device address
oem_i2c_addr = 0x5b

##### The following fields represent OEM_RESETCTRL_Configuration

# OEM Main Reset GPIO PIN
oem_main_reset_pin = 274

# OEM Bootloader Mode GPIO PIN
oem_blmd_reset_pin = 000

# OEM Bootloader Mode GPIO PIN is in use; 0 - Not in use; 1 - In use
oem_blmd_in_use = 0

##### The following fields represent OEM_IRQCTRL_Configuration

# Number of IRQ pin
oem_num_irq_pins = 1

# OEM IRQ PIN 0 Number
oem_irq_pin_0_num = 260

# OEM IRQ PIN 0 Trigger Type - 0 - Disable/None, 1 - Rising Edge, 2 - Falling Edge, 3 - Any
oem_irq_pin_0_trig_type = 1


